From 7c3980b2dc488e789b9df8d2fe376bf3c8cd2df7 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 26 Jul 2015 17:01:01 +0100
Subject: [PATCH 2/2] eopkg: Enable comparison by release field (highest wins)

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 libappstream-builder/asb-package-eopkg.c | 54 ++++++++++++++++++++++++++++++--
 1 file changed, 51 insertions(+), 3 deletions(-)

diff --git a/libappstream-builder/asb-package-eopkg.c b/libappstream-builder/asb-package-eopkg.c
index cf6572c..4a5bfa6 100644
--- a/libappstream-builder/asb-package-eopkg.c
+++ b/libappstream-builder/asb-package-eopkg.c
@@ -38,8 +38,6 @@
 #include <errno.h>
 #include <string.h>
 
-G_DEFINE_TYPE (AsbPackageEopkg, asb_package_eopkg, ASB_TYPE_PACKAGE)
-
 /**
  * Storage for eopkg metadata
  */
@@ -87,6 +85,17 @@ typedef struct eopkg_t {
 } eopkg_t;
 
 
+
+typedef struct _AsbPackageEopkgPrivate	AsbPackageEopkgPrivate;
+struct _AsbPackageEopkgPrivate
+{
+	eopkg_t	*package;
+};
+
+G_DEFINE_TYPE_WITH_PRIVATE (AsbPackageEopkg, asb_package_eopkg, ASB_TYPE_PACKAGE)
+
+#define GET_PRIVATE(o) (asb_package_eopkg_get_instance_private (o))
+
 /**
  * Process metadata.xml node
  */
@@ -438,6 +447,19 @@ asb_package_eopkg_init (AsbPackageEopkg *pkg)
 {
 }
 
+/**
+ * asb_package_eopkg_finalize:
+ **/
+static void
+asb_package_eopkg_finalize (GObject *object)
+{
+	AsbPackageEopkg *pkg = ASB_PACKAGE_EOPKG (object);
+	AsbPackageEopkgPrivate *priv = GET_PRIVATE (pkg);
+
+	close_eopkg (priv->package);
+
+	G_OBJECT_CLASS (asb_package_eopkg_parent_class)->finalize (object);
+}
 
 /**
  * asb_package_eopkg_open:
@@ -448,11 +470,14 @@ asb_package_eopkg_open (AsbPackage *pkg, const gchar *filename, GError **error)
 	eopkg_t *eopkg = NULL;
 	gchar *rel = NULL;
 	GSList *elem = NULL;
+	AsbPackageEopkgPrivate *priv = NULL;
 
 	eopkg = open_eopkg(filename);
 	if (!eopkg)
 		return FALSE;
 
+	priv = GET_PRIVATE(ASB_PACKAGE_EOPKG(pkg));
+
 	asb_package_set_name (pkg, eopkg->meta->name);
 	asb_package_set_source (pkg, eopkg->meta->source);
 
@@ -469,7 +494,7 @@ asb_package_eopkg_open (AsbPackage *pkg, const gchar *filename, GError **error)
 
 	asb_package_set_license (pkg, eopkg->meta->licenses->data);
 
-	close_eopkg(eopkg);
+	priv->package = eopkg;
 
 	return TRUE;
 }
@@ -504,14 +529,37 @@ asb_package_eopkg_explode (AsbPackage *pkg,
 }
 
 /**
+ * asb_package_eopkg_compare:
+ **/
+static gint
+asb_package_eopkg_compare (AsbPackage *pkg1, AsbPackage *pkg2)
+{
+	AsbPackageEopkg *pkg_eopkg1 = ASB_PACKAGE_EOPKG (pkg1);
+	AsbPackageEopkgPrivate *priv1 = GET_PRIVATE (pkg_eopkg1);
+
+	AsbPackageEopkg *pkg_eopkg2 = ASB_PACKAGE_EOPKG (pkg2);
+	AsbPackageEopkgPrivate *priv2 = GET_PRIVATE (pkg_eopkg2);
+
+	gint rel1 = priv1->package->meta->release;
+	gint rel2 = priv2->package->meta->release;
+
+	return (rel1 > rel2) - (rel1 < rel2);
+}
+
+/**
  * asb_package_eopkg_class_init:
  **/
 static void
 asb_package_eopkg_class_init (AsbPackageEopkgClass *klass)
 {
 	AsbPackageClass *package_class = ASB_PACKAGE_CLASS (klass);
+	GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+	object_class->finalize = asb_package_eopkg_finalize;
+
 	package_class->open = asb_package_eopkg_open;
 	package_class->explode = asb_package_eopkg_explode;
+	package_class->compare = asb_package_eopkg_compare;
 }
 
 /**
-- 
2.11.0

